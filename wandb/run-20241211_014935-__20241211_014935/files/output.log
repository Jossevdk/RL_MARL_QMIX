enemy: randomTeam.py
Loading Team: /home/seppe/RL/RL_MARL_QMIX//agents/randomTeam.py
Arguments: {}
Blue team starts
/tmp/ipykernel_80084/2155634838.py:61: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  state = torch.tensor(obs_agent, dtype=torch.float32).to(device)
Loaded layout from file
Loading Team: /home/seppe/RL/RL_MARL_QMIX//agents/randomTeam.py
Arguments: {}
Red team starts
enemy: randomTeam.py
Loading Team: /home/seppe/RL/RL_MARL_QMIX//agents/randomTeam.py
Arguments: {}
Red team starts
/tmp/ipykernel_80084/3100742227.py:61: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  state = torch.tensor(obs_agent, dtype=torch.float32).to(device)
enemy: randomTeam.py
Loading Team: /home/seppe/RL/RL_MARL_QMIX//agents/randomTeam.py
Arguments: {}
Blue team starts
/tmp/ipykernel_80084/1502746539.py:61: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  state = torch.tensor(obs_agent, dtype=torch.float32).to(device)
-601.800000000001
-666.3999999999993
Episode reward: -1268.2000000000003
enemy: randomTeam.py
Loading Team: /home/seppe/RL/RL_MARL_QMIX//agents/randomTeam.py
Arguments: {}
Red team starts
-664.1100000000005
-774.1100000000009
Episode reward: -1438.2200000000014
enemy: randomTeam.py
Loading Team: /home/seppe/RL/RL_MARL_QMIX//agents/randomTeam.py
Arguments: {}
Red team starts
enemy: randomTeam.py
Loading Team: /home/seppe/RL/RL_MARL_QMIX//agents/randomTeam.py
Arguments: {}
Blue team starts
/tmp/ipykernel_80084/3516947577.py:61: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  state = torch.tensor(obs_agent, dtype=torch.float32).to(device)
0
0
0
1
0
1
1
1
1
0
0
0
0
0
1
1
0
1
0
1
0
1
1
1
1
1
2
1
3
1
4
1
3
1
4
0
5
0
4
0
5
1
4
1
4
1
4
0
3
0
3
0
3
0
3
1
4
1
3
0
3
1
2
1
2
0
3
1
3
1
2
2
2
3
2
2
2
1
2
1
3
1
4
1
4
1
5
0
6
0
5
0
5
0
5
0
4
0
5
1
6
1
6
1
6
1
6
0
6
1
6
1
6
1
5
1
6
1
5
1
5
1
6
1
6
0
6
1
5
1
6
0
6
1
5
1
6
1
7
1
6
1
6
1
6
1
5
1
5
2
5
1
6
1
6
1
5
1
6
0
7
0
7
0
7
1
7
1
7
2
7
1
7
2
6
2
5
2
5
1
5
1
4
1
4
0
4
0
5
1
6
1
6
1
6
1
7
1
8
0
9
0
8
1
7
1
8
1
8
1
9
1
9
1
8
1
8
1
7
1
7
1
6
1
5
0
4
0
4
1
4
1
4
1
3
1
2
1
2
1
2
1
2
0
2
0
2
1
2
2
1
2
1
1
1
2
0
2
1
3
1
3
1
3
1
3
1
3
1
3
1
3
1
3
1
3
1
3
1
3
1
3
2
3
3
3
3
2
4
2
4
2
4
1
4
0
4
0
4
0
4
0
4
1
4
2
4
2
4
2
4
2
4
2
4
2
4
3
4
3
5
3
6
2
6
2
5
2
5
2
5
2
5
2
5
2
5
2
5
3
5
3
5
3
5
3
4
4
3
4
3
4
3
5
2
5
1
6
1
6
0
6
0
6
0
6
0
6
0
6
0
6
0
6
0
6
0
6
0
6
0
5
0
5
0
5
0
5
0
5
1
5
1
5
0
5
0
4
0
3
0
4
0
3
0
3
1
4
2
4
1
4
0
4
0
4
0
4
0
4
0
4
0
4
0
4
0
5
1
6
0
6
0
6
0
7
0
7
0
6
0
7
0
8
1
8
1
9
0
8
0
8
0
8
0
8
0
8
0
8
0
8
0
7
0
6
0
6
0
5
0
6
0
7
0
7
0
7
0
7
0
6
0
7
0
7
0
6
0
7
0
7
0
8
0
8
0
8
1
8
1
9
1
9
2
9
1
8
1
8
1
8
1
7
1
7
2
8
2
8
3
8
3
9
4
9
4
9
4
8
4
8
4
9
3
8
3
8
4
7
3
7
2
7
3
7
3
6
2
5
2
5
2
5
3
5
3
5
4
5
4
6
4
5
5
5
4
5
4
5
4
5
4
5
4
5
5
4
4
4
4
5
3
5
3
5
2
5
2
5
3
5
3
4
3
3
3
3
3
3
3
3
-420.3400000000003
-403.1399999999997
Episode reward: -823.48
enemy: randomTeam.py
Loading Team: /home/seppe/RL/RL_MARL_QMIX//agents/randomTeam.py
Arguments: {}
Blue team starts
0
0
1
1
1
1
1
1
1
1
1
2
2
1
3
1
4
1
4
0
4
0
4
1
5
2
5
2
5
2
5
1
6
2
6
2
6
2
6
2
6
2
6
2
6
3
7
3
6
3
6
3
6
3
6
2
6
2
6
2
6
2
7
3
8
2
8
3
8
2
8
2
8
2
7
3
6
3
6
2
6
2
6
2
6
2
6
2
6
2
7
2
7
2
8
1
8
1
8
0
8
1
7
0
7
0
7
0
6
0
6
0
6
0
6
0
6
0
5
0
5
1
6
2
6
3
6
3
6
3
6
3
6
3
6
3
6
4
6
4
7
3
7
3
7
3
7
3
8
2
8
2
8
3
8
3
9
3
9
2
9
2
8
3
8
3
8
2
7
3
8
3
8
3
7
3
7
3
8
3
7
4
7
4
7
4
6
4
6
4
6
3
6
2
6
2
6
1
6
2
6
2
7
2
7
2
7
1
8
1
7
1
8
1
8
1
8
1
8
1
8
0
8
0
8
0
8
0
8
0
7
0
7
0
7
0
7
1
8
1
7
2
7
3
7
3
8
3
8
3
8
3
8
3
7
4
7
5
8
5
8
5
8
5
7
5
8
5
8
6
8
7
8
6
9
6
9
6
9
6
9
5
10
5
9
5
9
5
10
5
9
5
9
6
9
6
8
6
7
6
7
6
7
6
7
6
7
6
7
6
6
5
6
5
6
6
6
6
7
6
7
6
6
6
5
6
5
6
5
6
6
6
6
5
6
4
7
4
7
3
7
4
7
3
7
2
7
2
8
2
9
2
9
3
10
2
10
2
10
3
10
3
9
2
9
2
8
2
9
2
10
2
10
3
10
3
10
3
9
3
9
4
9
4
8
4
8
4
9
4
9
4
9
4
9
5
10
5
10
5
9
5
8
5
8
5
7
5
6
6
5
6
5
5
6
5
6
5
6
6
6
5
7
5
7
5
8
5
8
5
8
5
8
5
8
4
9
4
9
4
9
4
9
3
8
3
8
2
7
3
8
2
7
2
7
1
7
1
7
1
7
1
7
1
7
1
6
1
5
1
5
1
4
1
4
1
4
1
4
1
4
1
4
1
4
0
4
1
4
1
4
1
5
1
5
1
6
1
6
1
5
0
6
0
6
1
5
1
5
1
5
1
5
1
5
1
4
1
4
1
3
1
3
1
3
0
3
0
4
1
3
1
2
1
2
1
2
1
2
1
3
1
4
1
3
1
2
1
2
1
2
1
3
1
3
0
3
0
3
1
4
1
5
0
5
0
6
0
6
0
6
0
6
0
6
0
6
1
6
1
7
1
7
1
7
0
7
0
8
1
8
1
8
1
8
1
7
2
8
1
9
2
-203.95000000000007
-448.15000000000003
Episode reward: -652.1000000000001
enemy: randomTeam.py
Loading Team: /home/seppe/RL/RL_MARL_QMIX//agents/randomTeam.py
Arguments: {}
Red team starts
0
0
0
0
0
0
0
0
1
0
2
1
2
1
2
1
2
1
2
1
2
1
2
1
3
1
3
1
3
1
2
1
2
1
2
1
2
1
3
1
3
1
4
1
4
0
4
0
4
1
4
1
4
0
4
0
5
1
5
1
5
1
5
1
5
1
4
0
4
0
5
1
5
2
5
2
5
2
5
2
4
3
4
2
4
2
5
1
4
1
4
1
4
2
4
3
4
3
5
3
4
2
4
2
4
2
3
2
3
2
3
2
3
2
4
3
4
3
5
3
5
4
5
5
5
5
5
5
5
5
5
5
5
4
4
4
4
4
4
4
4
4
4
3
3
3
3
3
3
2
3
2
3
2
3
2
3
2
2
1
2
0
2
1
2
1
3
1
3
0
3
0
2
0
2
1
3
1
3
1
3
1
4
1
4
1
4
1
5
1
5
1
6
1
6
1
6
0
6
1
6
0
7
1
7
1
7
1
8
1
7
1
6
1
6
0
6
0
6
0
6
0
7
1
8
1
8
0
7
0
7
1
6
0
6
1
6
2
6
3
5
3
5
2
4
3
4
2
3
1
3
1
3
1
2
1
3
1
3
1
3
1
4
1
3
0
3
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
1
2
0
3
0
2
0
2
1
1
1
1
0
1
1
1
2
0
2
0
2
1
2
1
2
Loaded layout from file
Loading Team: /home/seppe/RL/RL_MARL_QMIX//agents/randomTeam.py
Arguments: {}
Red team starts
Loaded layout from file
Loading Team: /home/seppe/RL/RL_MARL_QMIX//agents/randomTeam.py
Arguments: {}
Blue team starts
Loaded layout from file
Loading Team: /home/seppe/RL/RL_MARL_QMIX//agents/randomTeam.py
Arguments: {}
Red team starts
None
enemy: randomTeam.py
Loading Team: /home/seppe/RL/RL_MARL_QMIX//agents/randomTeam.py
Arguments: {}
Red team starts
/tmp/ipykernel_80084/2363438705.py:62: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  state = torch.tensor(obs_agent, dtype=torch.float32).to(device)
0
0
0
1
0
1
0
0
0
1
0
1
0
1
1
1
1
1
1
0
1
0
1
0
1
0
1
1
0
1
0
1
0
1
0
1
0
1
1
1
1
1
1
1
1
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
1
1
1
1
2
1
2
0
2
0
3
0
2
0
2
0
2
0
2
1
1
1
1
1
0
0
1
0
0
0
0
1
0
1
0
1
0
1
0
0
0
1
0
1
0
1
0
1
1
1
0
0
0
1
0
1
0
1
0
1
0
0
0
0
0
0
0
0
0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
1
0
0
0
0
0
0
0
1
0
2
0
3
0
4
1
5
1
4
0
4
0
4
1
4
1
4
1
4
1
4
1
4
2
5
3
4
3
5
3
5
3
4
2
4
1
5
0
6
0
6
1
6
1
5
1
4
1
4
1
5
1
4
1
4
0
4
0
5
0
6
0
6
0
5
1
5
0
4
1
5
2
5
2
4
2
4
2
5
3
6
3
7
3
7
3
7
3
6
4
6
3
5
3
5
3
6
3
5
3
5
3
5
3
4
3
4
3
5
2
6
2
5
2
4
2
3
2
3
2
4
3
4
3
5
4
6
5
6
5
6
4
7
4
7
5
7
4
7
4
7
4
7
4
8
4
8
4
8
4
7
4
6
3
6
3
7
2
8
2
9
2
10
2
10
2
10
2
9
2
10
2
9
3
9
3
9
3
8
3
8
3
7
3
7
3
8
4
9
4
9
4
9
4
9
5
8
5
hallo: None
enemy: randomTeam.py
Loading Team: /home/seppe/RL/RL_MARL_QMIX//agents/randomTeam.py
Arguments: {}
Blue team starts
/tmp/ipykernel_80084/468077693.py:62: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  state = torch.tensor(obs_agent, dtype=torch.float32).to(device)
hallo: None
enemy: randomTeam.py
Loading Team: /home/seppe/RL/RL_MARL_QMIX//agents/randomTeam.py
Arguments: {}
Red team starts
/tmp/ipykernel_80084/1678649001.py:63: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  state = torch.tensor(obs_agent, dtype=torch.float32).to(device)
hallo: None
enemy: randomTeam.py
Loading Team: /home/seppe/RL/RL_MARL_QMIX//agents/randomTeam.py
Arguments: {}
Blue team starts
/tmp/ipykernel_80084/3925857597.py:63: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  state = torch.tensor(obs_agent, dtype=torch.float32).to(device)
Loaded layout from file
Loading Team: /home/seppe/RL/RL_MARL_QMIX//agents/randomTeam.py
Arguments: {}
Red team starts
TTTTTTTTTTTTTTTTTTTT
TFFFFFFFFFFFFFFFFFFT
TFTTFTFTTTTTTFTFTTFT
TFFFFFFFFFFFFFFFFFFT
TFTTTTTTTTTTTTTTTTFT
TFFFFFFFFFTTFFFFFFFT
TTTTTTTTTTTTTTTTTTTT
hallo: None
enemy: randomTeam.py
Loading Team: /home/seppe/RL/RL_MARL_QMIX//agents/randomTeam.py
Arguments: {}
Blue team starts
/tmp/ipykernel_80084/234725423.py:64: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  state = torch.tensor(obs_agent, dtype=torch.float32).to(device)
Loaded layout from file
Loading Team: /home/seppe/RL/RL_MARL_QMIX//agents/randomTeam.py
Arguments: {}
Blue team starts
TTTTTTTTTTTTTTTTTTTT
TFFFFFFFFFFFFFFFFFFT
TFTTFTFTTTTTTFTFTTFT
TFFFFFFFFFFFFFFFFFFT
TFTTTTTTTTTTTTTTTTFT
TFFFFFFFFFTTFFFFFFFT
TTTTTTTTTTTTTTTTTTTT
hallo: {((1, 1), (1, 1)): 0, ((1, 2), (1, 1)): 1, ((1, 3), (1, 1)): 2, ((1, 4), (1, 1)): 3, ((1, 5), (1, 1)): 4, ((2, 1), (1, 1)): 1, ((2, 3), (1, 1)): 3, ((2, 5), (1, 1)): 5, ((3, 1), (1, 1)): 2, ((3, 3), (1, 1)): 4, ((3, 5), (1, 1)): 6, ((4, 1), (1, 1)): 3, ((4, 3), (1, 1)): 5, ((4, 4), (1, 1)): 6, ((4, 5), (1, 1)): 7, ((5, 1), (1, 1)): 4, ((5, 3), (1, 1)): 6, ((5, 5), (1, 1)): 8, ((6, 1), (1, 1)): 5, ((6, 3), (1, 1)): 7, ((6, 4), (1, 1)): 8, ((6, 5), (1, 1)): 9, ((7, 1), (1, 1)): 6, ((7, 3), (1, 1)): 8, ((7, 5), (1, 1)): 10, ((8, 1), (1, 1)): 7, ((8, 3), (1, 1)): 9, ((8, 5), (1, 1)): 11, ((9, 1), (1, 1)): 8, ((9, 3), (1, 1)): 10, ((9, 5), (1, 1)): 12, ((10, 3), (1, 1)): 11, ((10, 5), (1, 1)): 13, ((11, 3), (1, 1)): 12, ((11, 5), (1, 1)): 14, ((12, 1), (1, 1)): 27, ((12, 3), (1, 1)): 13, ((12, 5), (1, 1)): 15, ((13, 1), (1, 1)): 26, ((13, 3), (1, 1)): 14, ((13, 4), (1, 1)): 15, ((13, 5), (1, 1)): 16, ((14, 1), (1, 1)): 25, ((14, 3), (1, 1)): 15, ((14, 5), (1, 1)): 17, ((15, 1), (1, 1)): 24, ((15, 3), (1, 1)): 16, ((15, 4), (1, 1)): 17, ((15, 5), (1, 1)): 18, ((16, 1), (1, 1)): 23, ((16, 3), (1, 1)): 17, ((16, 5), (1, 1)): 19, ((17, 1), (1, 1)): 22, ((17, 3), (1, 1)): 18, ((17, 5), (1, 1)): 20, ((18, 1), (1, 1)): 21, ((18, 2), (1, 1)): 20, ((18, 3), (1, 1)): 19, ((18, 4), (1, 1)): 20, ((18, 5), (1, 1)): 21, ((1, 1), (1, 2)): 1, ((1, 2), (1, 2)): 0, ((1, 3), (1, 2)): 1, ((1, 4), (1, 2)): 2, ((1, 5), (1, 2)): 3, ((2, 1), (1, 2)): 2, ((2, 3), (1, 2)): 2, ((2, 5), (1, 2)): 4, ((3, 1), (1, 2)): 3, ((3, 3), (1, 2)): 3, ((3, 5), (1, 2)): 5, ((4, 1), (1, 2)): 4, ((4, 3), (1, 2)): 4, ((4, 4), (1, 2)): 5, ((4, 5), (1, 2)): 6, ((5, 1), (1, 2)): 5, ((5, 3), (1, 2)): 5, ((5, 5), (1, 2)): 7, ((6, 1), (1, 2)): 6, ((6, 3), (1, 2)): 6, ((6, 4), (1, 2)): 7, ((6, 5), (1, 2)): 8, ((7, 1), (1, 2)): 7, ((7, 3), (1, 2)): 7, ((7, 5), (1, 2)): 9, ((8, 1), (1, 2)): 8, ((8, 3), (1, 2)): 8, ((8, 5), (1, 2)): 10, ((9, 1), (1, 2)): 9, ((9, 3), (1, 2)): 9, ((9, 5), (1, 2)): 11, ((10, 3), (1, 2)): 10, ((10, 5), (1, 2)): 12, ((11, 3), (1, 2)): 11, ((11, 5), (1, 2)): 13, ((12, 1), (1, 2)): 26, ((12, 3), (1, 2)): 12, ((12, 5), (1, 2)): 14, ((13, 1), (1, 2)): 25, ((13, 3), (1, 2)): 13, ((13, 4), (1, 2)): 14, ((13, 5), (1, 2)): 15, ((14, 1), (1, 2)): 24, ((14, 3), (1, 2)): 14, ((14, 5), (1, 2)): 16, ((15, 1), (1, 2)): 23, ((15, 3), (1, 2)): 15, ((15, 4), (1, 2)): 16, ((15, 5), (1, 2)): 17, ((16, 1), (1, 2)): 22, ((16, 3), (1, 2)): 16, ((16, 5), (1, 2)): 18, ((17, 1), (1, 2)): 21, ((17, 3), (1, 2)): 17, ((17, 5), (1, 2)): 19, ((18, 1), (1, 2)): 20, ((18, 2), (1, 2)): 19, ((18, 3), (1, 2)): 18, ((18, 4), (1, 2)): 19, ((18, 5), (1, 2)): 20, ((1, 1), (1, 3)): 2, ((1, 2), (1, 3)): 1, ((1, 3), (1, 3)): 0, ((1, 4), (1, 3)): 1, ((1, 5), (1, 3)): 2, ((2, 1), (1, 3)): 3, ((2, 3), (1, 3)): 1, ((2, 5), (1, 3)): 3, ((3, 1), (1, 3)): 4, ((3, 3), (1, 3)): 2, ((3, 5), (1, 3)): 4, ((4, 1), (1, 3)): 5, ((4, 3), (1, 3)): 3, ((4, 4), (1, 3)): 4, ((4, 5), (1, 3)): 5, ((5, 1), (1, 3)): 6, ((5, 3), (1, 3)): 4, ((5, 5), (1, 3)): 6, ((6, 1), (1, 3)): 7, ((6, 3), (1, 3)): 5, ((6, 4), (1, 3)): 6, ((6, 5), (1, 3)): 7, ((7, 1), (1, 3)): 8, ((7, 3), (1, 3)): 6, ((7, 5), (1, 3)): 8, ((8, 1), (1, 3)): 9, ((8, 3), (1, 3)): 7, ((8, 5), (1, 3)): 9, ((9, 1), (1, 3)): 10, ((9, 3), (1, 3)): 8, ((9, 5), (1, 3)): 10, ((10, 3), (1, 3)): 9, ((10, 5), (1, 3)): 11, ((11, 3), (1, 3)): 10, ((11, 5), (1, 3)): 12, ((12, 1), (1, 3)): 25, ((12, 3), (1, 3)): 11, ((12, 5), (1, 3)): 13, ((13, 1), (1, 3)): 24, ((13, 3), (1, 3)): 12, ((13, 4), (1, 3)): 13, ((13, 5), (1, 3)): 14, ((14, 1), (1, 3)): 23, ((14, 3), (1, 3)): 13, ((14, 5), (1, 3)): 15, ((15, 1), (1, 3)): 22, ((15, 3), (1, 3)): 14, ((15, 4), (1, 3)): 15, ((15, 5), (1, 3)): 16, ((16, 1), (1, 3)): 21, ((16, 3), (1, 3)): 15, ((16, 5), (1, 3)): 17, ((17, 1), (1, 3)): 20, ((17, 3), (1, 3)): 16, ((17, 5), (1, 3)): 18, ((18, 1), (1, 3)): 19, ((18, 2), (1, 3)): 18, ((18, 3), (1, 3)): 17, ((18, 4), (1, 3)): 18, ((18, 5), (1, 3)): 19, ((1, 1), (1, 4)): 3, ((1, 2), (1, 4)): 2, ((1, 3), (1, 4)): 1, ((1, 4), (1, 4)): 0, ((1, 5), (1, 4)): 1, ((2, 1), (1, 4)): 4, (
enemy: randomTeam.py
Loading Team: /home/seppe/RL/RL_MARL_QMIX//agents/randomTeam.py
Arguments: {}
Blue team starts
/tmp/ipykernel_80084/2166862353.py:64: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  state = torch.tensor(obs_agent, dtype=torch.float32).to(device)
-324.12000000000035
-194.5199999999999
Episode reward: -518.6400000000002
enemy: randomTeam.py
Loading Team: /home/seppe/RL/RL_MARL_QMIX//agents/randomTeam.py
Arguments: {}
Red team starts
Loaded layout from file
Loading Team: /home/seppe/RL/RL_MARL_QMIX//agents/randomTeam.py
Arguments: {}
Blue team starts
TTTTTTTTTTTTTTTTTTTT
TFFFFFFFFFFFFFFFFFFT
TFTTFTFTTTTTTFTFTTFT
TFFFFFFFFFFFFFFFFFFT
TFTTTTTTTTTTTTTTTTFT
TFFFFFFFFFTTFFFFFFFT
TTTTTTTTTTTTTTTTTTTT
hallo: {((1, 1), (1, 1)): 0, ((1, 2), (1, 1)): 1, ((1, 3), (1, 1)): 2, ((1, 4), (1, 1)): 3, ((1, 5), (1, 1)): 4, ((2, 1), (1, 1)): 1, ((2, 3), (1, 1)): 3, ((2, 5), (1, 1)): 5, ((3, 1), (1, 1)): 2, ((3, 3), (1, 1)): 4, ((3, 5), (1, 1)): 6, ((4, 1), (1, 1)): 3, ((4, 3), (1, 1)): 5, ((4, 4), (1, 1)): 6, ((4, 5), (1, 1)): 7, ((5, 1), (1, 1)): 4, ((5, 3), (1, 1)): 6, ((5, 5), (1, 1)): 8, ((6, 1), (1, 1)): 5, ((6, 3), (1, 1)): 7, ((6, 4), (1, 1)): 8, ((6, 5), (1, 1)): 9, ((7, 1), (1, 1)): 6, ((7, 3), (1, 1)): 8, ((7, 5), (1, 1)): 10, ((8, 1), (1, 1)): 7, ((8, 3), (1, 1)): 9, ((8, 5), (1, 1)): 11, ((9, 1), (1, 1)): 8, ((9, 3), (1, 1)): 10, ((9, 5), (1, 1)): 12, ((10, 3), (1, 1)): 11, ((10, 5), (1, 1)): 13, ((11, 3), (1, 1)): 12, ((11, 5), (1, 1)): 14, ((12, 1), (1, 1)): 27, ((12, 3), (1, 1)): 13, ((12, 5), (1, 1)): 15, ((13, 1), (1, 1)): 26, ((13, 3), (1, 1)): 14, ((13, 4), (1, 1)): 15, ((13, 5), (1, 1)): 16, ((14, 1), (1, 1)): 25, ((14, 3), (1, 1)): 15, ((14, 5), (1, 1)): 17, ((15, 1), (1, 1)): 24, ((15, 3), (1, 1)): 16, ((15, 4), (1, 1)): 17, ((15, 5), (1, 1)): 18, ((16, 1), (1, 1)): 23, ((16, 3), (1, 1)): 17, ((16, 5), (1, 1)): 19, ((17, 1), (1, 1)): 22, ((17, 3), (1, 1)): 18, ((17, 5), (1, 1)): 20, ((18, 1), (1, 1)): 21, ((18, 2), (1, 1)): 20, ((18, 3), (1, 1)): 19, ((18, 4), (1, 1)): 20, ((18, 5), (1, 1)): 21, ((1, 1), (1, 2)): 1, ((1, 2), (1, 2)): 0, ((1, 3), (1, 2)): 1, ((1, 4), (1, 2)): 2, ((1, 5), (1, 2)): 3, ((2, 1), (1, 2)): 2, ((2, 3), (1, 2)): 2, ((2, 5), (1, 2)): 4, ((3, 1), (1, 2)): 3, ((3, 3), (1, 2)): 3, ((3, 5), (1, 2)): 5, ((4, 1), (1, 2)): 4, ((4, 3), (1, 2)): 4, ((4, 4), (1, 2)): 5, ((4, 5), (1, 2)): 6, ((5, 1), (1, 2)): 5, ((5, 3), (1, 2)): 5, ((5, 5), (1, 2)): 7, ((6, 1), (1, 2)): 6, ((6, 3), (1, 2)): 6, ((6, 4), (1, 2)): 7, ((6, 5), (1, 2)): 8, ((7, 1), (1, 2)): 7, ((7, 3), (1, 2)): 7, ((7, 5), (1, 2)): 9, ((8, 1), (1, 2)): 8, ((8, 3), (1, 2)): 8, ((8, 5), (1, 2)): 10, ((9, 1), (1, 2)): 9, ((9, 3), (1, 2)): 9, ((9, 5), (1, 2)): 11, ((10, 3), (1, 2)): 10, ((10, 5), (1, 2)): 12, ((11, 3), (1, 2)): 11, ((11, 5), (1, 2)): 13, ((12, 1), (1, 2)): 26, ((12, 3), (1, 2)): 12, ((12, 5), (1, 2)): 14, ((13, 1), (1, 2)): 25, ((13, 3), (1, 2)): 13, ((13, 4), (1, 2)): 14, ((13, 5), (1, 2)): 15, ((14, 1), (1, 2)): 24, ((14, 3), (1, 2)): 14, ((14, 5), (1, 2)): 16, ((15, 1), (1, 2)): 23, ((15, 3), (1, 2)): 15, ((15, 4), (1, 2)): 16, ((15, 5), (1, 2)): 17, ((16, 1), (1, 2)): 22, ((16, 3), (1, 2)): 16, ((16, 5), (1, 2)): 18, ((17, 1), (1, 2)): 21, ((17, 3), (1, 2)): 17, ((17, 5), (1, 2)): 19, ((18, 1), (1, 2)): 20, ((18, 2), (1, 2)): 19, ((18, 3), (1, 2)): 18, ((18, 4), (1, 2)): 19, ((18, 5), (1, 2)): 20, ((1, 1), (1, 3)): 2, ((1, 2), (1, 3)): 1, ((1, 3), (1, 3)): 0, ((1, 4), (1, 3)): 1, ((1, 5), (1, 3)): 2, ((2, 1), (1, 3)): 3, ((2, 3), (1, 3)): 1, ((2, 5), (1, 3)): 3, ((3, 1), (1, 3)): 4, ((3, 3), (1, 3)): 2, ((3, 5), (1, 3)): 4, ((4, 1), (1, 3)): 5, ((4, 3), (1, 3)): 3, ((4, 4), (1, 3)): 4, ((4, 5), (1, 3)): 5, ((5, 1), (1, 3)): 6, ((5, 3), (1, 3)): 4, ((5, 5), (1, 3)): 6, ((6, 1), (1, 3)): 7, ((6, 3), (1, 3)): 5, ((6, 4), (1, 3)): 6, ((6, 5), (1, 3)): 7, ((7, 1), (1, 3)): 8, ((7, 3), (1, 3)): 6, ((7, 5), (1, 3)): 8, ((8, 1), (1, 3)): 9, ((8, 3), (1, 3)): 7, ((8, 5), (1, 3)): 9, ((9, 1), (1, 3)): 10, ((9, 3), (1, 3)): 8, ((9, 5), (1, 3)): 10, ((10, 3), (1, 3)): 9, ((10, 5), (1, 3)): 11, ((11, 3), (1, 3)): 10, ((11, 5), (1, 3)): 12, ((12, 1), (1, 3)): 25, ((12, 3), (1, 3)): 11, ((12, 5), (1, 3)): 13, ((13, 1), (1, 3)): 24, ((13, 3), (1, 3)): 12, ((13, 4), (1, 3)): 13, ((13, 5), (1, 3)): 14, ((14, 1), (1, 3)): 23, ((14, 3), (1, 3)): 13, ((14, 5), (1, 3)): 15, ((15, 1), (1, 3)): 22, ((15, 3), (1, 3)): 14, ((15, 4), (1, 3)): 15, ((15, 5), (1, 3)): 16, ((16, 1), (1, 3)): 21, ((16, 3), (1, 3)): 15, ((16, 5), (1, 3)): 17, ((17, 1), (1, 3)): 20, ((17, 3), (1, 3)): 16, ((17, 5), (1, 3)): 18, ((18, 1), (1, 3)): 19, ((18, 2), (1, 3)): 18, ((18, 3), (1, 3)): 17, ((18, 4), (1, 3)): 18, ((18, 5), (1, 3)): 19, ((1, 1), (1, 4)): 3, ((1, 2), (1, 4)): 2, ((1, 3), (1, 4)): 1, ((1, 4), (1, 4)): 0, ((1, 5), (1, 4)): 1, ((2, 1), (1, 4)): 4, (
enemy: randomTeam.py
Loading Team: /home/seppe/RL/RL_MARL_QMIX//agents/randomTeam.py
Arguments: {}
Red team starts
/tmp/ipykernel_80084/945163510.py:64: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  state = torch.tensor(obs_agent, dtype=torch.float32).to(device)
0
0
0
0
0
1
0
1
1
0
1
1
2
1
3
1
4
0
5
1
6
1
5
1
6
1
6
0
7
0
8
0
7
0
7
0
7
0
7
0
7
0
7
0
7
0
7
0
8
0
8
0
9
0
9
0
10
0
10
1
10
1
9
1
8
1
9
1
10
1
10
1
10
1
10
1
10
1
10
1
10
1
10
1
10
1
10
1
9
1
9
1
10
1
10
1
9
1
9
1
9
1
9
1
8
1
8
1
8
1
8
0
8
0
8
0
8
0
8
0
9
1
9
2
9
2
10
2
10
3
10
3
11
4
12
4
12
5
12
5
13
5
13
5
14
6
14
7
14
7
14
7
14
7
14
7
13
7
13
8
14
9
14
9
14
9
13
9
12
8
12
8
12
8
12
8
12
9
12
9
12
9
12
9
12
9
11
9
10
8
10
9
10
8
10
8
11
8
12
8
11
8
12
8
13
8
14
8
14
8
14
8
14
7
15
8
16
8
17
8
17
8
18
7
18
8
19
8
19
8
19
8
19
8
18
8
17
7
18
7
19
8
18
8
18
8
19
8
18
8
17
8
17
9
17
9
16
9
15
8
15
8
14
7
14
6
14
6
14
5
14
5
14
5
15
5
14
5
13
5
14
5
15
5
14
5
15
5
15
5
15
5
15
5
15
5
14
5
15
5
14
5
14
5
14
5
14
6
14
6
14
6
14
7
13
8
14
8
14
9
14
9
13
9
14
8
14
9
14
9
14
9
14
8
14
7
14
7
14
7
14
8
14
8
15
8
14
8
14
8
14
7
15
7
14
7
14
6
14
6
14
7
13
7
13
7
14
8
14
8
15
9
15
9
15
9
15
9
15
9
15
9
14
10
14
10
14
10
13
11
13
11
12
12
12
11
12
11
12
11
12
11
12
11
12
11
12
11
11
11
12
11
12
11
11
12
11
12
10
12
9
11
9
11
9
11
10
11
10
11
9
11
10
11
11
11
11
11
12
10
12
10
12
10
12
10
11
10
11
11
12
12
12
12
12
12
11
11
12
11
13
11
13
11
14
11
14
12
15
12
15
12
15
11
15
10
14
10
14
10
13
10
12
10
12
10
12
11
12
11
12
10
12
10
13
11
14
12
13
12
14
12
14
11
14
10
13
9
13
8
13
7
13
7
12
8
12
8
11
9
12
10
12
10
12
9
12
9
12
10
13
10
13
11
13
11
13
10
14
9
14
8
15
8
15
8
15
8
15
7
14
8
15
8
15
8
14
9
15
8
16
8
16
8
16
8
16
8
16
8
16
8
16
8
16
8
17
8
18
8
18
7
18
7
18
8
19
7
19
8
19
8
19
8
19
8
19
8
20
8
20
8
-29.689999999999884
-202.2899999999996
Episode reward: -231.97999999999948
enemy: randomTeam.py
Loading Team: /home/seppe/RL/RL_MARL_QMIX//agents/randomTeam.py
Arguments: {}
Blue team starts
0
0
0
1
0
1
0
0
0
0
0
1
1
1
0
2
0
1
0
1
0
1
0
1
0
1
0
1
0
0
0
0
1
0
1
0
1
0
1
1
1
1
1
1
1
0
1
0
1
0
1
1
1
1
1
1
1
1
0
1
0
1
0
1
1
1
2
1
1
1
1
1
0
1
0
1
0
1
0
1
0
1
0
1
1
1
1
1
0
1
0
0
1
0
1
0
1
0
1
0
1
0
1
0
2
0
2
1
1
1
2
1
1
1
1
0
1
1
1
0
1
0
1
1
0
2
0
2
0
2
0
2
0
2
0
2
0
2
1
2
0
3
0
3
0
3
0
3
0
4
1
4
1
4
1
4
1
3
0
3
0
3
0
3
1
4
2
4
2
4
2
4
2
4
2
4
2
4
3
4
2
4
2
4
1
3
1
3
2
4
3
4
3
4
2
5
2
5
1
6
1
6
0
6
1
6
1
6
1
7
0
8
0
8
0
8
0
8
0
8
1
7
1
6
0
5
0
5
0
6
0
7
1
7
2
7
2
7
1
6
2
6
1
6
Loaded layout from file
Loading Team: /home/seppe/RL/RL_MARL_QMIX//agents/randomTeam.py
Arguments: {}
Blue team starts
Loaded layout from file
Loading Team: /home/seppe/RL/RL_MARL_QMIX//agents/randomTeam.py
Arguments: {}
Red team starts
TTTTTTTTTTTTTTTTTTTT
TFFFFFFFFFFFFFFFFFFT
TFTTFTFTTTTTTFTFTTFT
TFFFFFFFFFFFFFFFFFFT
TFTTTTTTTTTTTTTTTTFT
TFFFFFFFFFTTFFFFFFFT
TTTTTTTTTTTTTTTTTTTT
hallo: {((1, 1), (1, 1)): 0, ((1, 2), (1, 1)): 1, ((1, 3), (1, 1)): 2, ((1, 4), (1, 1)): 3, ((1, 5), (1, 1)): 4, ((2, 1), (1, 1)): 1, ((2, 3), (1, 1)): 3, ((2, 5), (1, 1)): 5, ((3, 1), (1, 1)): 2, ((3, 3), (1, 1)): 4, ((3, 5), (1, 1)): 6, ((4, 1), (1, 1)): 3, ((4, 3), (1, 1)): 5, ((4, 4), (1, 1)): 6, ((4, 5), (1, 1)): 7, ((5, 1), (1, 1)): 4, ((5, 3), (1, 1)): 6, ((5, 5), (1, 1)): 8, ((6, 1), (1, 1)): 5, ((6, 3), (1, 1)): 7, ((6, 4), (1, 1)): 8, ((6, 5), (1, 1)): 9, ((7, 1), (1, 1)): 6, ((7, 3), (1, 1)): 8, ((7, 5), (1, 1)): 10, ((8, 1), (1, 1)): 7, ((8, 3), (1, 1)): 9, ((8, 5), (1, 1)): 11, ((9, 1), (1, 1)): 8, ((9, 3), (1, 1)): 10, ((9, 5), (1, 1)): 12, ((10, 3), (1, 1)): 11, ((10, 5), (1, 1)): 13, ((11, 3), (1, 1)): 12, ((11, 5), (1, 1)): 14, ((12, 1), (1, 1)): 27, ((12, 3), (1, 1)): 13, ((12, 5), (1, 1)): 15, ((13, 1), (1, 1)): 26, ((13, 3), (1, 1)): 14, ((13, 4), (1, 1)): 15, ((13, 5), (1, 1)): 16, ((14, 1), (1, 1)): 25, ((14, 3), (1, 1)): 15, ((14, 5), (1, 1)): 17, ((15, 1), (1, 1)): 24, ((15, 3), (1, 1)): 16, ((15, 4), (1, 1)): 17, ((15, 5), (1, 1)): 18, ((16, 1), (1, 1)): 23, ((16, 3), (1, 1)): 17, ((16, 5), (1, 1)): 19, ((17, 1), (1, 1)): 22, ((17, 3), (1, 1)): 18, ((17, 5), (1, 1)): 20, ((18, 1), (1, 1)): 21, ((18, 2), (1, 1)): 20, ((18, 3), (1, 1)): 19, ((18, 4), (1, 1)): 20, ((18, 5), (1, 1)): 21, ((1, 1), (1, 2)): 1, ((1, 2), (1, 2)): 0, ((1, 3), (1, 2)): 1, ((1, 4), (1, 2)): 2, ((1, 5), (1, 2)): 3, ((2, 1), (1, 2)): 2, ((2, 3), (1, 2)): 2, ((2, 5), (1, 2)): 4, ((3, 1), (1, 2)): 3, ((3, 3), (1, 2)): 3, ((3, 5), (1, 2)): 5, ((4, 1), (1, 2)): 4, ((4, 3), (1, 2)): 4, ((4, 4), (1, 2)): 5, ((4, 5), (1, 2)): 6, ((5, 1), (1, 2)): 5, ((5, 3), (1, 2)): 5, ((5, 5), (1, 2)): 7, ((6, 1), (1, 2)): 6, ((6, 3), (1, 2)): 6, ((6, 4), (1, 2)): 7, ((6, 5), (1, 2)): 8, ((7, 1), (1, 2)): 7, ((7, 3), (1, 2)): 7, ((7, 5), (1, 2)): 9, ((8, 1), (1, 2)): 8, ((8, 3), (1, 2)): 8, ((8, 5), (1, 2)): 10, ((9, 1), (1, 2)): 9, ((9, 3), (1, 2)): 9, ((9, 5), (1, 2)): 11, ((10, 3), (1, 2)): 10, ((10, 5), (1, 2)): 12, ((11, 3), (1, 2)): 11, ((11, 5), (1, 2)): 13, ((12, 1), (1, 2)): 26, ((12, 3), (1, 2)): 12, ((12, 5), (1, 2)): 14, ((13, 1), (1, 2)): 25, ((13, 3), (1, 2)): 13, ((13, 4), (1, 2)): 14, ((13, 5), (1, 2)): 15, ((14, 1), (1, 2)): 24, ((14, 3), (1, 2)): 14, ((14, 5), (1, 2)): 16, ((15, 1), (1, 2)): 23, ((15, 3), (1, 2)): 15, ((15, 4), (1, 2)): 16, ((15, 5), (1, 2)): 17, ((16, 1), (1, 2)): 22, ((16, 3), (1, 2)): 16, ((16, 5), (1, 2)): 18, ((17, 1), (1, 2)): 21, ((17, 3), (1, 2)): 17, ((17, 5), (1, 2)): 19, ((18, 1), (1, 2)): 20, ((18, 2), (1, 2)): 19, ((18, 3), (1, 2)): 18, ((18, 4), (1, 2)): 19, ((18, 5), (1, 2)): 20, ((1, 1), (1, 3)): 2, ((1, 2), (1, 3)): 1, ((1, 3), (1, 3)): 0, ((1, 4), (1, 3)): 1, ((1, 5), (1, 3)): 2, ((2, 1), (1, 3)): 3, ((2, 3), (1, 3)): 1, ((2, 5), (1, 3)): 3, ((3, 1), (1, 3)): 4, ((3, 3), (1, 3)): 2, ((3, 5), (1, 3)): 4, ((4, 1), (1, 3)): 5, ((4, 3), (1, 3)): 3, ((4, 4), (1, 3)): 4, ((4, 5), (1, 3)): 5, ((5, 1), (1, 3)): 6, ((5, 3), (1, 3)): 4, ((5, 5), (1, 3)): 6, ((6, 1), (1, 3)): 7, ((6, 3), (1, 3)): 5, ((6, 4), (1, 3)): 6, ((6, 5), (1, 3)): 7, ((7, 1), (1, 3)): 8, ((7, 3), (1, 3)): 6, ((7, 5), (1, 3)): 8, ((8, 1), (1, 3)): 9, ((8, 3), (1, 3)): 7, ((8, 5), (1, 3)): 9, ((9, 1), (1, 3)): 10, ((9, 3), (1, 3)): 8, ((9, 5), (1, 3)): 10, ((10, 3), (1, 3)): 9, ((10, 5), (1, 3)): 11, ((11, 3), (1, 3)): 10, ((11, 5), (1, 3)): 12, ((12, 1), (1, 3)): 25, ((12, 3), (1, 3)): 11, ((12, 5), (1, 3)): 13, ((13, 1), (1, 3)): 24, ((13, 3), (1, 3)): 12, ((13, 4), (1, 3)): 13, ((13, 5), (1, 3)): 14, ((14, 1), (1, 3)): 23, ((14, 3), (1, 3)): 13, ((14, 5), (1, 3)): 15, ((15, 1), (1, 3)): 22, ((15, 3), (1, 3)): 14, ((15, 4), (1, 3)): 15, ((15, 5), (1, 3)): 16, ((16, 1), (1, 3)): 21, ((16, 3), (1, 3)): 15, ((16, 5), (1, 3)): 17, ((17, 1), (1, 3)): 20, ((17, 3), (1, 3)): 16, ((17, 5), (1, 3)): 18, ((18, 1), (1, 3)): 19, ((18, 2), (1, 3)): 18, ((18, 3), (1, 3)): 17, ((18, 4), (1, 3)): 18, ((18, 5), (1, 3)): 19, ((1, 1), (1, 4)): 3, ((1, 2), (1, 4)): 2, ((1, 3), (1, 4)): 1, ((1, 4), (1, 4)): 0, ((1, 5), (1, 4)): 1, ((2, 1), (1, 4)): 4, (
enemy: randomTeam.py
Loading Team: /home/seppe/RL/RL_MARL_QMIX//agents/randomTeam.py
Arguments: {}
Red team starts
/tmp/ipykernel_80084/2812192046.py:64: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  state = torch.tensor(obs_agent, dtype=torch.float32).to(device)
